
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE EQUALS ID LPAREN MINUS NUMBER PLUS RPAREN SEMICOLON TIMES\n    statements : statements statement\n               | statement\n    statement : ID EQUALS expression SEMICOLONexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : NUMBERfactor : LPAREN expression RPARENfactor : ID'
    
_lr_action_items = {'ID':([0,1,2,4,5,11,12,13,14,15,16,],[3,3,-2,-1,6,6,-3,6,6,6,6,]),'$end':([1,2,4,12,],[0,-2,-1,-3,]),'EQUALS':([3,],[5,]),'NUMBER':([5,11,13,14,15,16,],[10,10,10,10,10,10,]),'LPAREN':([5,11,13,14,15,16,],[11,11,11,11,11,11,]),'TIMES':([6,8,9,10,18,19,20,21,22,],[-12,15,-9,-10,15,15,-7,-8,-11,]),'DIVIDE':([6,8,9,10,18,19,20,21,22,],[-12,16,-9,-10,16,16,-7,-8,-11,]),'SEMICOLON':([6,7,8,9,10,18,19,20,21,22,],[-12,12,-6,-9,-10,-4,-5,-7,-8,-11,]),'PLUS':([6,7,8,9,10,17,18,19,20,21,22,],[-12,13,-6,-9,-10,13,-4,-5,-7,-8,-11,]),'MINUS':([6,7,8,9,10,17,18,19,20,21,22,],[-12,14,-6,-9,-10,14,-4,-5,-7,-8,-11,]),'RPAREN':([6,8,9,10,17,18,19,20,21,22,],[-12,-6,-9,-10,22,-4,-5,-7,-8,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,],[2,4,]),'expression':([5,11,],[7,17,]),'term':([5,11,13,14,],[8,8,18,19,]),'factor':([5,11,13,14,15,16,],[9,9,9,9,20,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','analizadorlexico.py',59),
  ('statements -> statement','statements',1,'p_statements','analizadorlexico.py',60),
  ('statement -> ID EQUALS expression SEMICOLON','statement',4,'p_statement_assign','analizadorlexico.py',64),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','analizadorlexico.py',68),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','analizadorlexico.py',72),
  ('expression -> term','expression',1,'p_expression_term','analizadorlexico.py',76),
  ('term -> term TIMES factor','term',3,'p_term_times','analizadorlexico.py',80),
  ('term -> term DIVIDE factor','term',3,'p_term_divide','analizadorlexico.py',84),
  ('term -> factor','term',1,'p_term_factor','analizadorlexico.py',91),
  ('factor -> NUMBER','factor',1,'p_factor_num','analizadorlexico.py',95),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','analizadorlexico.py',99),
  ('factor -> ID','factor',1,'p_factor_id','analizadorlexico.py',103),
]
